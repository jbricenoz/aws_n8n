version: '3.8'

services:
  n8n:
    image: n8nio/n8n:latest
    # Uncomment below if you have a custom Dockerfile
    # build: .
    restart: unless-stopped
    ports:
      - "5678:5678"
    env_file:
      - .env
    environment:
      - GENERIC_TIMEZONE=America/Denver   # Set your timezone
      - N8N_BASIC_AUTH_ACTIVE=${N8N_BASIC_AUTH_ACTIVE}
      - N8N_BASIC_AUTH_USER=${N8N_BASIC_AUTH_USER}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_BASIC_AUTH_PASSWORD}
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=${DB_POSTGRESDB_HOST}
      - DB_POSTGRESDB_PORT=${DB_POSTGRESDB_PORT}
      - DB_POSTGRESDB_DATABASE=${DB_POSTGRESDB_DATABASE}
      - DB_POSTGRESDB_USER=${DB_POSTGRESDB_USER}
      - DB_POSTGRESDB_PASSWORD=${DB_POSTGRESDB_PASSWORD}
      - N8N_HOST=${N8N_HOST}
      - N8N_PORT=5678
      - N8N_PROTOCOL=https
      - WEBHOOK_URL=${WEBHOOK_URL}
      - VUE_APP_URL_BASE_API=${N8N_HOST}
      # Add any other environment variables needed for your setup
    volumes:
      - n8n_data:/home/node/.n8n
      # - /path/to/custom/files:/files
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5678/healthz"]
      interval: 30s
      timeout: 10s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"

volumes:
  n8n_data:
    name: n8n_data

# For production, consider using a reverse proxy (e.g., Nginx, Traefik) in front of n8n for SSL termination and scaling.
# For scaling, run n8n in queue mode and add Redis service, see n8n docs for horizontal scaling.
